# ================================================================================================================
# NUMBERS
# ================================================================================================================
# неизменяемый тип
# Атомарный объект
# int     вес - 24 байта целые числа
# float   вес - 24 байта вещественные числа
# complex вес - 32 байта комплексные числа

# =========================================================================================================
# INT - ЦЕЛЫЕ ЧИСЛА
# =========================================================================================================
# Над целыми числами также можно производить битовые операции

i = 1

"""
['__abs__', '__add__', '__and__', '__bool__', '__ceil__', '__class__', '__delattr__', '__dir__', '__divmod__', '__doc__', '__eq__', '__float__', '__floor__', '__floordiv__', '__format__', '__ge__', '__getattribute__', '__getnewargs__', '__gt__', '__hash__', '__index__', '__init__', '__init_subclass__', '__int__', '__invert__', '__le__', '__lshift__', '__lt__', '__mod__', '__mul__', '__ne__', '__neg__', '__new__', '__or__', '__pos__', '__pow__', '__radd__', '__rand__', '__rdivmod__', '__reduce__', '__reduce_ex__', '__repr__', '__rfloordiv__', '__rlshift__', '__rmod__', '__rmul__', '__ror__', '__round__', '__rpow__', '__rrshift__', '__rshift__', '__rsub__', '__rtruediv__', '__rxor__', '__setattr__', '__sizeof__', '__str__', '__sub__', '__subclasshook__', '__truediv__', '__trunc__', '__xor__', 'as_integer_ratio', 'bit_length', 'conjugate', 'denominator', 'from_bytes', 'imag', 'numerator', 'real', 'to_bytes']
"""
20 / 3                  # 6.666666666666667
20 / 5                  # 4.0 Результат деления целых чисел в Питоне 3 всегда вещественное число

-x	                    # Смена знака числа
abs(-5)	                # 5 Модуль числа

20 // 3	                # 6 Получение целой части от деления
20 % 3	                # 2 Остаток от деления
divmod(x, y)	          # (6, 2) Пара (x // y, x % y)

3 ** 4                  # 81 возведение в степень
pow(3, 4)               # 81 возведение в степень pow(x, y[, z]) xy по модулю (если модуль z задан)

# =========================================================================================================
# FLOAT - ВЕЩЕСТВЕННЫЕ ЧИСЛА
# =========================================================================================================

f = 1.23

"""
['__abs__', '__add__', '__bool__', '__class__', '__delattr__', '__dir__', '__divmod__', '__doc__', '__eq__', '__float__', '__floordiv__', '__format__', '__ge__', '__getattribute__', '__getformat__', '__getnewargs__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__int__', '__le__', '__lt__', '__mod__', '__mul__', '__ne__', '__neg__', '__new__', '__pos__', '__pow__', '__radd__', '__rdivmod__', '__reduce__', '__reduce_ex__', '__repr__', '__rfloordiv__', '__rmod__', '__rmul__', '__round__', '__rpow__', '__rsub__', '__rtruediv__', '__set_format__', '__setattr__', '__sizeof__', '__str__', '__sub__', '__subclasshook__', '__truediv__', '__trunc__', 'as_integer_ratio', 'conjugate', 'fromhex', 'hex', 'imag', 'is_integer', 'real']
"""


# =========================================================================================================
# COMPLEX - КОМПЛЕКСНЫЕ ЧИСЛА
# =========================================================================================================






# =========================================================================================================
# ПРЕОБРАЗОВАНИЕ В ДРУГУЮ СИСТЕМУ
# =========================================================================================================

bin(55)
hex(55)
oct(55)








complex

https://proproprogs.ru/python_base/arifmeticheskiye-operatsii

#унарный минус
a=2
print(+a, -a)


a = 1; b = 2
c = b-a #бинарный минус
print(c)

# сначала выполнится умножение, а затем – сложение.
a=2; b=-5.8; c=2.3
print( a+b*c )


3//2
x % y

2**3**2      возведения в степень выполняется справа-налево.














